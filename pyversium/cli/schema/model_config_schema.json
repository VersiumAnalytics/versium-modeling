{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {

    "train": {
      "description": "Specific configuration when using the `train` subcommand for `model` CLI. Overrides higher level properties with the same name",
      "additionalProperties": true,
      "properties": {
        "input": {
          "description": "Input file for modeling.",
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "label_positive_value": {
          "type": "string"
        },
        "header": {
          "description": "Path to header file, if there is one. Don't include this if your file already has a header.",
          "type": "string"
        },
        "delimiter": {
          "description": "Delimiter for columns in the input file.",
          "type": "string"
        },
        "include_cols": {
          "description": "Columns to include as features. If provided, only columns in this list will be used.",
          "type": "array"
        },
        "exclude_cols": {
          "description": "Columns to exclude as features. If provided, matching columns will not be used in modeling.",
          "type": "array"
        },
        "regex_include_cols": {
          "description": "Use regex expressions to include any features that match the pattern.",
          "type": "array"
        },
        "regex_exclude_cols": {
          "description": "Use regex expressions to exclude any features that match the pattern.",
          "type": "array"
        },
        "num_opt": {
          "description": "Number of optimization rounds to perform for model tuning."
        }
      }
    },

    "score": {
      "additionalProperties": true,
      "description": "Specific configuration when using the `score` subcommand for `model` CLI. Overrides higher level properties with the same name",
      "properties": {
        "input": {
          "description": "Input file for scoring.",
          "type": "string"
        },
        "output": {
          "description": "File to write output results to. Defaults to stdout",
          "type": "string"
        },
        "chunksize": {
          "description": "Read input in chunks of CHUNKSIZE lines instead of all at once.",
          "type": "integer"
        },
        "header": {
          "description": "Path to header file, if there is one. Don't include this if your file already has a header.",
          "type": "string"
        },
         "delimiter":{
          "description": "Delimiter for columns in the input file. Same delimiter will be used for output file.",
          "type": "string"
        }
      }
    }
  },
  "title": "model_config",
  "type": "object",
  "description": "Configurations to load when using the `model` CLI tool. Pass the config file with --config my/config/file.json",
  "minItems": 0,
  "uniqueItems": true,
  "properties": {
    "model_dir": {
      "description": "Directory to use for saving models, reports, and logs.",
      "type": "string"
    },
    "header": {
          "description": "Path to header file, if there is one. Don't include this if your file already has a header.",
          "type": "string"
    },
    "logging_level": {
      "description": "Logging verbosity, DEBUG being the most verbose and CRITICAL being the least.",
      "type": "string",
      "enum": ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"]
    },
    "log_file": {
      "description": "Additional file to write logs to. Logs are automatically written to the model directory as well.",
      "type": "string"
    },
    "log_packages": {
      "description": "Additional packages to collect logs for (e.g. numpy, sklearn, pandas, etc.). By default only logs this program.",
      "type": "array"
    }

  }
}